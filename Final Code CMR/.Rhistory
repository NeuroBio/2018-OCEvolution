pval <- round(pchisq(2*(MeanArd - MeanER),1,lower.tail=FALSE),digits=3)
ifelse(pval == 0,pval <- "<0.001", pval <- paste0("=",pval))
writeLines(title)
writeLines(paste0("OneRate=", round(MeanER, digits = 4)))
writeLines(paste0("TwoRates=", round(MeanArd, digits = 4)))
writeLines(paste0("pVal", pval))
writeLines(paste("",sep="\n\n"))
writeLines(paste("",sep="\n\n"))
#text(max(c(D1$x,D2$x))*.99,max(c(D1$y,D2$y))*.6,
#     paste0("p-value",pval),
#     adj=1)
}
#get data and rainbow plots
DataExtraction(OpenCloseTri, birbs[-remove,], VariantTree, call[i], mod=mod[i], fullrate=FullRateTri)
ANOVAData[[i]] <- ANOVARun #created by DataExtraction()
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "TriBrownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i], "Tri"), Group=c("Closed-Rate", "Open-Rate"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"), Group=c("Closed-Rate", "Open-Rate"))
sink(file=NULL)
dev.off()
sink(file=NULL)
dev.off()
sink(file=NULL)
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"), Group=c("Closed-Rate", "Open-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"), Group=c("Stable-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"), Group=c("Closed-Rate", "Open-Rate"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"), Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
dataset
#plots
colnames(dataset)
#plots
repl("ARDRate", colnames(dataset))
?grep
#plots
grepl("ARDRate", colnames(dataset))
#plots
grep("ARDRate", colnames(dataset))
#plots
ARDs <- length(grep("ARDRate", colnames(dataset)))
ARDs
density(dataset[paste0('ARDRate', i-1)])
paste0('ARDRate', i-1)
density(dataset[,paste0('ARDRate', i-1)])
D <- list()
D <- list()
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
}
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
}
D
D <- as.data.frame(D)
D[[i]]
D[[i]][1]
D[[i]]$y
D <- list()
Maxes <- numeric(length=ARDS)
Mins <- numeric(length=ARDS)
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
Maxes[i] <- max(D[[i]]$y)
Mins[i] <- min(D[[i]]$y)
}
Maxes <- numeric(length=ARDS)
#plots
ARDs <- length(grep("ARDRate", colnames(dataset)))
D <- list()
Maxes <- numeric(length=ARDS)
Mins <- numeric(length=ARDS)
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
Maxes[i] <- max(D[[i]]$y)
Mins[i] <- min(D[[i]]$y)
}
Maxes <- numeric(length=ARDs)
Mins <- numeric(length=ARDs)
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
Maxes[i] <- max(D[[i]]$y)
Mins[i] <- min(D[[i]]$y)
}
#data cleaning
dataset<- dataset[!is.na(dataset$Pval),]
dataset<- dataset[dataset$convergence == "Optimization has converged.",]
#plots
ARDs <- length(grep("ARDRate", colnames(dataset)))
D <- list()
Maxes <- numeric(length=ARDs)
Mins <- numeric(length=ARDs)
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
Maxes[i] <- max(D[[i]]$y)
Mins[i] <- min(D[[i]]$y)
}
plot(D[[i]],col=col[1],
xlim=Xlim,
ylim=c(min(Mins),
max(Maxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
Xlim =c(min(XMins),
max(XMaxes))
#plots
ARDs <- length(grep("ARDRate", colnames(dataset)))
D <- list()
YMaxes <- numeric(length=ARDs)
YMins <- numeric(length=ARDs)
XMaxes <- numeric(length=ARDs)
XMins <- numeric(length=ARDs)
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
YMaxes[i] <- max(D[[i]]$y)
YMins[i] <- min(D[[i]]$y)
XMaxes[i] <- max(D[[i]]$x)
XMins[i] <- min(D[[i]]$x)
}
Xlim =c(min(XMins),
max(XMaxes))
plot(D[[i]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
plot(D[[i]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Obs
plot(D[[i]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
plot(D[[i]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
c(min(YMins),
max(YMaxes))
Xlim
col[1]
col=c("blue","red")
plot(D[[i]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
lines(D2, col=col[2], lwd=2)
abline(v=dataset$ERRate[1])
legend("topright", legend=Groups, col=col, lty=1, lwd=2)
#stats
MeanArd <- mean(dataset$ARDloglik)
MeanER <- mean(dataset$ERloglik)
pval <- round(pchisq(2*(MeanArd - MeanER),1,lower.tail=FALSE),digits=3)
ifelse(pval == 0,pval <- "<0.001", pval <- paste0("=",pval))
writeLines(title)
writeLines(paste0("OneRate=", round(MeanER, digits = 4)))
writeLines(paste0("TwoRates=", round(MeanArd, digits = 4)))
writeLines(paste0("pVal", pval))
writeLines(paste("",sep="\n\n"))
writeLines(paste("",sep="\n\n"))
plot(D[[1]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
lines(D[[2]], col=col[2], lwd=2)
abline(v=dataset$ERRate[1])
for(i in 2:ARDs){
lines(D[[i]], col=col[i], lwd=2)
}
abline(v=dataset$ERRate[1])
plot(D[[1]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
for(i in 2:ARDs){
lines(D[[i]], col=col[i], lwd=2)
}
ARDs
D[[i]]
D[[1]]
D
2:ARDs
i <- 2
lines(D[[i]], col=col[i], lwd=2)
i <- 3
lines(D[[i]], col=col[i], lwd=2)
col=c('red', 'green', 'blue')
for(i in 2:ARDs){
lines(D[[i]], col=col[i], lwd=2)
}
col
plot(D[[1]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
for(i in 2:ARDs){
lines(D[[i]], col=col[i], lwd=2)
}
abline(v=dataset$ERRate[1])
legend("topright", legend=Groups, col=col, lty=1, lwd=2)
#stats
MeanArd <- mean(dataset$ARDloglik)
MeanER <- mean(dataset$ERloglik)
pval <- round(pchisq(2*(MeanArd - MeanER),1,lower.tail=FALSE),digits=3)
ifelse(pval == 0,pval <- "<0.001", pval <- paste0("=",pval))
writeLines(title)
writeLines(paste0("OneRate=", round(MeanER, digits = 4)))
writeLines(paste0("TwoRates=", round(MeanArd, digits = 4)))
writeLines(paste0("pVal", pval))
writeLines(paste("",sep="\n\n"))
writeLines(paste("",sep="\n\n"))
BrowniePlotRates <- function(dataset, title="BrowniePlot", col=c("blue","red"), Groups=c("Rate0", "Rate1"),
Xlim =c(min(XMins),
max(XMaxes)) ){
#data cleaning
dataset<- dataset[!is.na(dataset$Pval),]
dataset<- dataset[dataset$convergence == "Optimization has converged.",]
#plots
ARDs <- length(grep("ARDRate", colnames(dataset)))
D <- list()
YMaxes <- numeric(length=ARDs)
YMins <- numeric(length=ARDs)
XMaxes <- numeric(length=ARDs)
XMins <- numeric(length=ARDs)
for(i in 1:ARDs){
D[[i]] <- density(dataset[,paste0('ARDRate', i-1)])
YMaxes[i] <- max(D[[i]]$y)
YMins[i] <- min(D[[i]]$y)
XMaxes[i] <- max(D[[i]]$x)
XMins[i] <- min(D[[i]]$x)
}
plot(D[[1]],col=col[1],
xlim=Xlim,
ylim=c(min(YMins),
max(YMaxes)),
main=title, xlab="Rates", font.lab=2,
ylab="Number of Observations",
cex.main=1, lwd=2)
for(i in 2:ARDs){
lines(D[[i]], col=col[i], lwd=2)
}
abline(v=dataset$ERRate[1])
legend("topright", legend=Groups, col=col, lty=1, lwd=2)
#stats
MeanArd <- mean(dataset$ARDloglik)
MeanER <- mean(dataset$ERloglik)
pval <- round(pchisq(2*(MeanArd - MeanER),1,lower.tail=FALSE),digits=3)
ifelse(pval == 0,pval <- "<0.001", pval <- paste0("=",pval))
writeLines(title)
writeLines(paste0("OneRate=", round(MeanER, digits = 4)))
writeLines(paste0("TwoRates=", round(MeanArd, digits = 4)))
writeLines(paste0("pVal", pval))
writeLines(paste("",sep="\n\n"))
writeLines(paste("",sep="\n\n"))
#text(max(c(D1$x,D2$x))*.99,max(c(D1$y,D2$y))*.6,
#     paste0("p-value",pval),
#     adj=1)
}
BrowniePlotRates(dataset, paste0(call[i], "Tri"), Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red')
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
Group=c("Closed-Rate", "Open-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
ANOVAData <- as.list(1:length(call))
for(i in 18:2){
#get data and rainbow plots
DataExtraction(OpenCloseTri, birbs[-remove,], VariantTree, call[i], mod=mod[i], fullrate=FullRateTri)
ANOVAData[[i]] <- ANOVARun #created by DataExtraction()
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
pdf(paste0(call[i], "-Tri.Brownie.pdf"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "TriBrownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
sink(file=NULL)
dev.off()
}
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "TriBrownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
sink(file=NULL)
dev.off()
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "TriBrownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
pdf(paste0(call[i], "Tri.Brownie.pdf"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "TriBrownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable-Rate", "Longer-Learning-Rate", "Plastic-Rate"))
sink(file=NULL)
dev.off()
i
sink(file=NULL)
sink(file=NULL)
sink(file=NULL)
i
i <- 2
call[i]
#get data and rainbow plots
DataExtraction(OpenCloseTri, birbs[-remove,], VariantTree, call[i], mod=mod[i], fullrate=FullRateTri)
ANOVAData[[i]] <- ANOVARun #created by DataExtraction()
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
pdf(paste0(call[i], "Tri.Brownie.pdf"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "TriBrownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
sink(file=NULL)
dev.off()
call[i]
mod=mod[i]
mod[i]
#Set variables and filestructure to output data
OpenClose <- birbs$O.C
OpenClose <- factor(OpenClose, labels = c("closed","open"))
names(OpenClose) <- birbs$BirdtreeFormat
OpenCloseTri <- OCVariants$tri[-remove]
OpenCloseTri <- factor(OpenCloseTri, labels = c("closed","delayed-closed","open"))
names(OpenCloseTri) <- OCVariants$BirdtreeFormat[-remove]
#Loop variables for main analysis:
call <- names(birbs)[1:(length(birbs))]
call <- call[!call %in% c("O.C", "BirdtreeFormat", "Family", "FormerFamily")]#remove non-independant vars
mod <- rep("log", length(call))
mod[c(1,19)] <- "linear"
FullRate <- RateMatx(ace(x=OpenClose, phy=ConsensusTree, type="discrete", model="ER"))
FullRateTri <- RateMatx(ace(x=OpenCloseTri, phy=VariantTree, type="discrete", model="ER"))
#Loop variables for the Jacknife; based on significnace from the main analysis
mod2 <- mod[c(2, 5, 8, 11, 14, 18)]
call2 <- call[c(2, 5, 8, 11, 14, 18)]
OpenCloseTri
birbs[-remove,]
call[i]
mod[i]
#get data and rainbow plots
DataExtraction(OpenCloseTri, birbs[-remove,], VariantTree, call[i], mod=mod[i], fullrate=FullRateTri)
sink(file=NULL)
#get data and rainbow plots
DataExtraction(OpenCloseTri, birbs[-remove,], VariantTree, call[i], mod=mod[i], fullrate=FullRateTri)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
call
i <- 18
#get data and rainbow plots
DataExtraction(OpenCloseTri, birbs[-remove,], VariantTree, call[i], mod=mod[i], fullrate=FullRateTri)
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
i <- 1
pdf(paste0(call[i], "Tri.Brownie.pdf"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
i <- 2
dev.off()
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
pdf(paste0(call[i], "Tri.Brownie.pdf"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
i <- 17
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
call[i]
i <- 18
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
BrowniePlotRates(dataset, paste0(call[i], "Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL-Tri"),
col = c('blue', 'purple', 'red'),
Group=c("Stable", "Longer-Learning", "Plastic"))
dev.off()
i <- 2
#get data and rainbow plots
DataExtraction(OpenClose, birbs, ConsensusTree, call[i], mod=mod[i], fullrate=FullRate)
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
pdf(paste0(call[i], ".Brownie.pdf"))
par(mfrow=c(2,2), mgp=c(1.5,.5,0), mar=c(3,3,2,1))
sink(file = "Brownie.txt", append = TRUE, split = FALSE)
BrowniePlotRates(dataset, paste0(call[i]), Group=c("Stable", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL"), Group=c("Stable", "Plastic"))
sink(file=NULL)
dev.off()
#plotting brownie data
dataset <- read.csv(paste0(call[i],".csv"))
datasetFULL <- read.csv(paste0(call[i],"FULL.csv"))
BrowniePlotRates(dataset, paste0(call[i]), Group=c("Stable", "Plastic"))
BrowniePlotRates(datasetFULL, paste0(call[i],"FULL"), Group=c("Stable", "Plastic"))
multisimmap <- make.simmap(tree=conse,x=OC, nsim=nsim, message=FALSE, Q=rater)
plot(multisimmap[[1]])
plot(multisimmap[[1]])
plot(multisimmap[[1]])
plot(multisimmap[[2]])
plot(multisimmap[[3]])
plot(multisimmap[[4]])
rmNA <- which(birbs$Song.rate[-remove,])
rmNA <- which(is.na(birbs$Song.rate[-remove,]))
rmNA <- which(is.na(birbs$Song.rate[-remove]))
rmNA <- which(is.na(birbs$Song.rate[-remove]))
rmNA
multisimmap <- make.simmap(tree=drop.tip(VariantTree, rmNA),x=OpenCloseTri[-rmNA], nsim=4, message=FALSE, Q=rater)
multisimmap <- make.simmap(tree=drop.tip(VariantTree, rmNA),x=OpenCloseTri[-rmNA], nsim=4, message=FALSE, Q=FullRateTri)
plot(multisimmap[[1]])
plot(multisimmap[[2]])
plot(multisimmap[[3]])
plot(multisimmap[[4]])
#SET UP!!!
rm(list = objects())
setwd()##set your directory here
#setwd("D:/Documents/R/2018-OCEvolution/Final Code CMR")
dir <- getwd()
?install.packages
?uninstall
??uninstall
